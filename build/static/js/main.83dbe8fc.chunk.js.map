{"version":3,"sources":["components/ResumeNav.js","components/ResumeButtons.js","components/FormHeader.js","components/Education.js","components/Experience.js","components/Personal.js","App.js","index.js"],"names":["ResumeNav","sectionTitle","className","ResumeButtons","navigateSections","newComponentData","onClick","name","FormHeader","formIndex","deleteForm","useContext","FormContext","icon","Education","componentsData","currentCompIndex","handleInput","useState","education","setEducation","inputCallback","event","type","value","placeholder","onChange","age","address","Experience","experience","setExperience","Personal","personal","setPersonal","library","add","fab","fas","App","currentSectionIndex","setCurrentSectionIndex","saveComponentsData","sectionsStrings","CurrentComponent","prevComponentArr","copy","JSON","parse","stringify","splice","data","setData","target","dataCopy","index","saveData","Provider","onSubmit","preventDefault","console","log","map","Component","newComponent","push","prevCurrentComponentIndex","React","createContext","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.83dbe8fc.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction ResumeNav({ sectionTitle }) {\n  return (\n    <nav className=\"resume-nav\">\n      <h1 className={\"resume-nav__header \" + (sectionTitle === \"Personal\" ? \"resume-nav__header-underline\" : \"\")}>\n        Personal\n      </h1>\n      <h1 className={\"resume-nav__header \" + (sectionTitle === \"Education\" ? \"resume-nav__header-underline\" : \"\")}>\n        Education\n      </h1>\n      <h1 className={\"resume-nav__header \" + (sectionTitle === \"Experience\" ? \"resume-nav__header-underline\" : \"\")}>\n        Experience\n      </h1>\n    </nav>\n  );\n}\n\nexport default ResumeNav;\n","import React from \"react\";\n\nfunction ResumeButtons({ sectionTitle, navigateSections, newComponentData }) {\n  return (\n    <div>\n      <div className=\"button-container\">\n        <button onClick={newComponentData} className=\"btn add-new-btn\">\n          Add New {sectionTitle}\n        </button>\n      </div>\n      <div className=\"button-container\">\n        <button className=\"btn\" name=\"Previous\" onClick={navigateSections}>\n          Previous\n        </button>\n        <button className=\"btn\" name=\"Next\" onClick={navigateSections}>\n          Next\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default ResumeButtons;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { FormContext } from \"../App\";\nimport { useContext } from \"react\";\n\nfunction FormHeader({ sectionTitle, formIndex }) {\n  const deleteForm = useContext(FormContext);\n\n  let handleClick = () => {\n    deleteForm(formIndex);\n  };\n\n  return (\n    <header className=\"resume-card__header\">\n      <h3 className=\"resume-card__h3\">\n        {sectionTitle} {formIndex + 1}\n      </h3>\n      <button className=\"trash-button\" onClick={handleClick}>\n        <FontAwesomeIcon icon={[\"fas\", \"trash\"]} className=\"trash-icon\" />\n      </button>\n    </header>\n  );\n}\n\nexport default FormHeader;\n","import React, { useState } from \"react\";\nimport FormHeader from \"./FormHeader\";\n\nconst Education = ({ componentsData, currentCompIndex, handleInput }) => {\n  const [education, setEducation] = useState(componentsData);\n\n  let inputCallback = (event) => {\n    handleInput(event, currentCompIndex, education, setEducation);\n  };\n\n  return (\n    <div className=\"resume-card\">\n      <FormHeader formIndex={currentCompIndex} sectionTitle=\"Education\" />\n\n      <div className=\"input-grid\">\n        <input type=\"text\" value={education.name || \"\"} name=\"name\" placeholder=\"Name\" onChange={inputCallback} />\n        <input type=\"text\" value={education.age || \"\"} name=\"age\" placeholder=\"Age\" onChange={inputCallback} />\n        <input\n          type=\"text\"\n          value={education.address || \"\"}\n          name=\"address\"\n          placeholder=\"Address\"\n          onChange={inputCallback}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Education;\n","import React, { useState } from \"react\";\nimport FormHeader from \"./FormHeader\";\n\nconst Experience = ({ componentsData, currentCompIndex, handleInput }) => {\n  const [experience, setExperience] = useState(componentsData);\n\n  let inputCallback = (event) => {\n    handleInput(event, currentCompIndex, experience, setExperience);\n  };\n\n  return (\n    <div className=\"resume-card\">\n      <FormHeader formIndex={currentCompIndex} sectionTitle=\"Experience\" />\n\n      <div className=\"input-grid\">\n        <input type=\"text\" value={experience.name || \"\"} name=\"name\" placeholder=\"Name\" onChange={inputCallback} />\n        <input type=\"text\" value={experience.age || \"\"} name=\"age\" placeholder=\"Age\" onChange={inputCallback} />\n        <input\n          type=\"text\"\n          value={experience.address || \"\"}\n          name=\"address\"\n          placeholder=\"Address\"\n          onChange={inputCallback}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Experience;\n","import React, { useState } from \"react\";\nimport FormHeader from \"./FormHeader\";\n\nconst Personal = ({ componentsData, currentCompIndex, handleInput }) => {\n  const [personal, setPersonal] = useState(componentsData);\n\n  let inputCallback = (event) => {\n    handleInput(event, currentCompIndex, personal, setPersonal);\n  };\n\n  return (\n    <div className=\"resume-card\">\n      <FormHeader formIndex={currentCompIndex} sectionTitle=\"Personal\" />\n\n      <div className=\"input-grid\">\n        <input type=\"text\" value={personal.name || \"\"} name=\"name\" placeholder=\"Name\" onChange={inputCallback} />\n        <input type=\"text\" value={personal.age || \"\"} name=\"age\" placeholder=\"Age\" onChange={inputCallback} />\n        <input\n          type=\"text\"\n          value={personal.address || \"\"}\n          name=\"address\"\n          placeholder=\"Address\"\n          onChange={inputCallback}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Personal;\n","import React, { useState } from \"react\";\nimport ResumeNav from \"./components/ResumeNav\";\nimport ResumeButtons from \"./components/ResumeButtons\";\nimport Education from \"./components/Education\";\nimport Experience from \"./components/Experience\";\nimport Personal from \"./components/Personal\";\nimport \"./styles/index.css\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\nlibrary.add(fab, fas);\n\nfunction App() {\n  const [currentSectionIndex, setCurrentSectionIndex] = useState(() => 0);\n  const [componentsData, saveComponentsData] = useState([[{}], [{}], [{}]]); // persists the personal, education, and experience states upon umount\n  const sectionsStrings = [\"Personal\", \"Education\", \"Experience\"];\n  let CurrentComponent = [Personal, Education, Experience][currentSectionIndex];\n\n  let newComponentData = () => {\n    const copy = JSON.parse(JSON.stringify(componentsData));\n    copy[currentSectionIndex].push({});\n    saveComponentsData(copy);\n  };\n\n  let saveData = (data, index) => {\n    saveComponentsData((prevComponentArr) => {\n      let copy = JSON.parse(JSON.stringify(prevComponentArr));\n      copy[currentSectionIndex][index] = data;\n      return copy;\n    });\n  };\n\n  let deleteForm = (formIndex) => {\n    saveComponentsData((prevComponentArr) => {\n      let copy = JSON.parse(JSON.stringify(prevComponentArr));\n      copy[currentSectionIndex].splice(formIndex, 1);\n      return copy;\n    });\n  };\n\n  let newComponent = (Component, index, data = {}) => {\n    return (\n      <Component\n        deleteForm={deleteForm}\n        handleInput={handleInput}\n        componentsData={data}\n        currentCompIndex={index}\n        key={index}\n      />\n    );\n  };\n\n  let renderComponents = () => {\n    let currentSection = JSON.parse(JSON.stringify(componentsData[currentSectionIndex]));\n    return currentSection.map((data, index) => {\n      return newComponent(CurrentComponent, index, data);\n    });\n  };\n\n  let navigateSections = (event) => {\n    event.preventDefault();\n    let { name } = event.target;\n    if (name === \"Previous\") {\n      setCurrentSectionIndex((prevCurrentComponentIndex) => {\n        if (currentSectionIndex < 1) {\n          return 2;\n        } else {\n          return --prevCurrentComponentIndex;\n        }\n      });\n    } else {\n      setCurrentSectionIndex((prevCurrentComponentIndex) => {\n        if (currentSectionIndex > 1) {\n          return 0;\n        } else {\n          return ++prevCurrentComponentIndex;\n        }\n      });\n    }\n  };\n\n  let handleInput = (event, currentCompIndex, data, setData) => {\n    let { name, value, type } = event.target;\n    const dataCopy = JSON.parse(JSON.stringify(data));\n    dataCopy[name] = value;\n    if (type === \"text\") setData(dataCopy);\n    saveData(dataCopy, currentCompIndex);\n  };\n\n  let handleSubmit = (event) => {\n    event.preventDefault();\n    console.log(\"yeppers\");\n  };\n\n  return (\n    <div>\n      <nav className=\"navbar\">\n        <h1>CV Builder</h1>\n      </nav>\n\n      <main>\n        <ResumeNav sectionTitle={sectionsStrings[currentSectionIndex]} />\n        <FormContext.Provider value={deleteForm}>\n          <form className=\"resume-form\" onSubmit={handleSubmit}>\n            {renderComponents()}\n            <ResumeButtons\n              newComponentData={newComponentData}\n              sectionTitle={sectionsStrings[currentSectionIndex]}\n              navigateSections={navigateSections}\n            />\n          </form>\n        </FormContext.Provider>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\nexport const FormContext = React.createContext();\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}